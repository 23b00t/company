@startuml
  class "Employee\n<b>Class Employee</b>" as Employee {
    -id : int|null
    -firstName : string|null
    -lastName : string|null
    -gender : string|null
    -salary : float|null
    +__construct(id, firstName, lastName, gender, salary)
    +getId()
    +getFirstName()
    +getLastName()
    +getGender()
    +getSalary()
    +getAllAsObjects()
    +deleteObjectById(id)
    +insert(firstName, lastName, gender, salaray)
    +getObjectById(id)
    +update()
  }
  class "Rental\n<b>Class Rental</b>" as Rental {
    +getAllAsObjects()
    +deleteObjectById(id)
    +getObjectById(id)
    +update()
  }
  interface "IBasic\n<b>IBasic</b>" as IBasic {
    +getAllAsObjects()
    +deleteObjectById(id)
    +getObjectById(id)
    +update()
  }
  class "Db\n<b>Design Pattern Singleton</b>" as Db {
    -dbh : object
    {static} +getConnection()
  }
  class "Car\n<b>Class Car</b>" as Car {
    -id : int|null
    -licensePlate : string|null
    -manufacturer : string|null
    -type : string|null
    +__construct(id, licensePlate, manufacturer, type)
    +getLicensePlate()
    +getManufacturer()
    +getType()
    +getId()
    +getAllAsObjects()
    +deleteObjectById(id)
    +insert(licensePlate, manufacturer, type)
    +getObjectById(id)
    +update()
  }
  Car ..> Db
  Employee ..> Db
  IBasic <|-- Car
  IBasic <|-- Employee
  IBasic <|-- Rental
@enduml

